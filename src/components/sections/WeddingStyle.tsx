import { Component } from 'react';
import * as React from "react";

type Photos = {
    column1: string[],
    column2: string[],
    column3: string[],
    column4: string[]
}

export class WeddingStyle extends Component<{}> {
    ornamentIconPath = "./images/flaticon/svg/005-two.svg"

    title = "–°—Ç–∏–ª—å —Å–≤–∞–¥—å–±—ã"

    photos: Photos = {
        column1: [
            "./images/photos/style/1.jpg",
            "./images/photos/style/2.jpg",
        ],
        column2: [
            "./images/photos/style/5.jpg",
            "./images/photos/style/6.jpg",
        ],
        column3: [
            "./images/photos/style/9.jpg",
            "./images/photos/style/10.jpg",
        ],
        column4: [
            "./images/photos/style/13.jpg",
            "./images/photos/style/14.jpg",
        ]
    }

    columnsNumber = Object.keys(this.photos).length

    renderPhoto(photo: string, index: number) {
        return (
            <div className="gallery wedding-style-gallery animate-box" key={ `photo_${index}` }>
                <a className="gallery-img image-popup" href={ photo }>
                    <img src={ photo } className="img-responsive" alt="" />
                </a>
            </div>
        )
    }

    renderPhotosForColumn(columnIndex: number) {
        return this.photos[`column${columnIndex + 1}`].map(this.renderPhoto)
    }

    renderPhotos() {
        return [...Array(this.columnsNumber)].map((_, i) =>
            <div className="col-md-3 col-sm-6 col-xs-6" key={ `photo_column_${i}` }>{ this.renderPhotosForColumn(i) }</div>
        )
    }

    renderDescriptionBlock() {
        return (
            <div className="col-md-12 text-center section-heading svg-sm colored">
                <img src={ this.ornamentIconPath } className="svg" alt="" />
                <h2>{ this.title }</h2>
                <p>–ú—ã –ø–æ–¥—É–º–∞–ª–∏, —á—Ç–æ –±—ã–ª–æ –±—ã –∫—Ä—É—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å–≤–∞–¥—å–±—É –≤ —Å—Ç–∏–ª–µ —Ä—É—Å—Ç–∏–∫: —ç—Ç–æ –∫—Ä–∞—Å–∏–≤—ã–π —Å—Ç–∏–ª—å, –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –±–ª–∏–∑–∫–∏ –∫ –ø—Ä–∏—Ä–æ–¥–µ, –∞ –º—ã –±–ª–∏–∑–∫–∏ –∫ –Ω–µ–π üôÇ</p>
                <p>–ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –Ω–∞—Ä—è–¥, –±–ª–∏–∑–∫–∏–π –∫ —ç—Ç–æ–º—É —Å—Ç–∏–ª—é, –±—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äì –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —ç—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.</p>
                <p>–ß—Ç–æ–±—ã –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–µ–µ, –≤–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏—Ö —Ç–∞–∫–æ–π —Å—Ç–∏–ª—å (–∞ <a href="https://pin.it/YlXyWvg" target="_blank">–≤–æ—Ç –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ</a> –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–±–æ–ª—å—à–µ —Ñ–æ—Ç–æ –Ω–∞—Ä—è–¥–æ–≤ –≤ —Å—Ç–∏–ª–µ —Ä—É—Å—Ç–∏–∫).</p>
                <div className="container-fluid">
                    <div className="row">
                        { this.renderPhotos() }
                    </div>
                </div>
            </div>
        )
    }

    render() {
        return (
            <div className="qbootstrap-section-gray" data-section="wedding-style">
                <div className="container">
                    <div className="row animate-box">
                        <div className="col-md-8 col-md-offset-2 animate-box">
                            { this.renderDescriptionBlock() }
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}
